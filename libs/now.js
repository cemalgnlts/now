var Now=(()=>{var c=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames;var p=Object.prototype.hasOwnProperty;var u=(s,e)=>{for(var t in e)c(s,t,{get:e[t],enumerable:!0})},M=(s,e,t,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of v(e))!p.call(s,i)&&i!==t&&c(s,i,{get:()=>e[i],enumerable:!(o=m(e,i))||o.enumerable});return s};var b=s=>M(c({},"__esModule",{value:!0}),s);var l=(s,e,t)=>{if(!e.has(s))throw TypeError("Cannot "+t)};var r=(s,e,t)=>(l(s,e,"read from private field"),t?t.call(s):e.get(s)),d=(s,e,t)=>{if(e.has(s))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(s):e.set(s,t)},w=(s,e,t,o)=>(l(s,e,"write to private field"),o?o.call(s,t):e.set(s,t),t);var k={};u(k,{default:()=>g});var h,a,n;class g{constructor(){d(this,h,new EventTarget);d(this,a,null);d(this,n,new Worker("./worker.js",{type:"module"}));r(this,n).onmessage=e=>this.onMessage(e.data),r(this,n).onerror=e=>console.error(e),this.stdin={write:e=>r(this,n).postMessage({cmd:"stdin",msg:e})}}on(e,t){r(this,n).postMessage({cmd:`listen-${e}`}),this.events.addEventListener(e,o=>t(o.detail))}onMessage({cmd:e,msg:t,type:o}){switch(e){case"ready":r(this,n).postMessage("boot"),r(this,a).call(this);break;case"event":r(this,h).dispatchEvent(new CustomEvent(o,{detail:t}));break}}async boot(){return r(this,n).postMessage({cmd:"boot"}),new Promise(e=>{w(this,a,e)})}}h=new WeakMap,a=new WeakMap,n=new WeakMap;return b(k);})();
